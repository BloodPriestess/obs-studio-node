environment:
  NodeVersion: 8
  SLBuildDirectory: streamlabs-build
  SLRuntime: electron
  SLRuntimeVersion: 1.7.11
  SLGenerator: Visual Studio 14 2015 Win64
  SLDistributeDirectory: distribute
  SLFullDistributePath: $(SLBuildDirectory)\$(SLDistributeDirectory)
  SLArch: x64
  SLArtifact: streamlabs-x86_64
  SignTool: C:\Program Files (x86)\Windows Kits\10\bin\x64\signtool.exe
  StreamlabsPfxSecret:
    secure: iZlMSWnmH5FQDpa+/0SgXIyvCobkElj2y5lu94Uo8VnTWHTeTC1/bpVkzsLreENocomvDB5ywsa3+QdathRp8A==
  StreamlabsSecret:
    secure: hr+VpykbGiCI5I0ltiqH667wh/YQx2Fi5SBLfkOWHSg=
  
install:
  - ps: Install-Product node $env:NodeVersion
  - yarn install

build_script:
  - yarn run cmake-js configure --out "%SLBuildDirectory%" -r="%SLRuntime%" -v="%SLRuntimeVersion%" -G"%SLGenerator%" -a "%SLArch%" --CDCMAKE_INSTALL_PREFIX="%SLDistributeDirectory%\obs-studio-node"
  - cmake --build %SLBuildDirectory% --target install --config Release
  - nuget install secure-file -ExcludeVersion
  
  - ps: |
      & secure-file\tools\secure-file -decrypt CI\streamlabsp12.pfx.enc -secret $env:StreamlabsPfxSecret -out CI\streamlabsp12.pfx
      if ($LASTEXITCODE -ne 0) {
        exit 1
      }

  - ps: |
      Get-ChildItem -Recurse  "$env:SLFullDistributePath" -Include "*.dll","*.node","*.exe" |
      Foreach-Object {
        & "$env:SignTool" sign /p "$env:StreamlabsSecret" /f CI\streamlabsp12.pfx $_.FullName

        if ($LASTEXITCODE -ne 0) {
          exit 1
        }
      }

  - if not exist "OBS-Studio-21.0.1-Small.zip" appveyor DownloadFile "https://github.com/jp9000/obs-studio/releases/download/21.0.1/OBS-Studio-21.0.1-Small.zip"
  - 7z x "OBS-Studio-21.0.1-Small.zip" -oobs-studio-jp9000
  - robocopy "obs-studio-jp9000\data\obs-plugins\win-capture" "%SLFullDistributePath%\obs-studio-node\libobs\data\obs-plugins\win-capture" & exit 0
  - tar cvaf "%SLArtifact%.tar.gz" -C "%SLFullDistributePath%" "obs-studio-node"

artifacts:
  - path: $(SLArtifact).tar.gz
    name: Streamlabs Aritfact

test: off